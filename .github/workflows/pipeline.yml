name: Sprint5 Full Automation

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Criar chave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/control-node-sprint5.pem
          chmod 400 ~/.ssh/control-node-sprint5.pem

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Apply
        run: |
          cd infra
          terraform init
          terraform apply -auto-approve

      - name: Set bucket name and EC2 IP
        run: |
          cd infra
          # captura os outputs do Terraform em formato limpo
          BUCKET=$(terraform output -raw bucket_name)
          IP=$(terraform output -raw ec2_public_ip | tr -d '[:space:]')
          # exporta para variáveis de ambiente do GitHub
          echo "BUCKET_NAME=$BUCKET" >> $GITHUB_ENV
          echo "EC2_PUBLIC_IP=$IP" >> $GITHUB_ENV

      - name: IP EC2
        id: ec2_ip
        run: |
          cd infra
          IP=$(terraform output -raw ec2_public_ip | tr -d '[:space:]')
          echo "EC2_PUBLIC_IP=$IP" >> $GITHUB_ENV

      - name: Gerar inventory
        run: |
          mkdir -p ansible
          echo "[ec2]" > ansible/inventory
          echo "$EC2_PUBLIC_IP ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/control-node-sprint5.pem ansible_python_interpreter=/usr/bin/python3" >> ansible/inventory

      - name: Configurar EC2 com Ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          cd ansible
          ansible-playbook -i inventory setup.yml

      - name: Instalar dependências Python
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install boto3 pandas

      - name: Executar pipeline de dados
        run: |
          python scripts/data_pipeline.py
